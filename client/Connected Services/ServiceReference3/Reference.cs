//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace client.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/customer_servicelibrary")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cPhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cId {
            get {
                return this.cIdField;
            }
            set {
                if ((this.cIdField.Equals(value) != true)) {
                    this.cIdField = value;
                    this.RaisePropertyChanged("cId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cName {
            get {
                return this.cNameField;
            }
            set {
                if ((object.ReferenceEquals(this.cNameField, value) != true)) {
                    this.cNameField = value;
                    this.RaisePropertyChanged("cName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cPhone {
            get {
                return this.cPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.cPhoneField, value) != true)) {
                    this.cPhoneField = value;
                    this.RaisePropertyChanged("cPhone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.Icustomerservice")]
    public interface Icustomerservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/GetCustomerIds", ReplyAction="http://tempuri.org/Icustomerservice/GetCustomerIdsResponse")]
        System.Data.DataSet GetCustomerIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/GetCustomerIds", ReplyAction="http://tempuri.org/Icustomerservice/GetCustomerIdsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerIdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/AddCustomer", ReplyAction="http://tempuri.org/Icustomerservice/AddCustomerResponse")]
        void AddCustomer(client.ServiceReference3.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/AddCustomer", ReplyAction="http://tempuri.org/Icustomerservice/AddCustomerResponse")]
        System.Threading.Tasks.Task AddCustomerAsync(client.ServiceReference3.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/GetCustomer", ReplyAction="http://tempuri.org/Icustomerservice/GetCustomerResponse")]
        client.ServiceReference3.Customer GetCustomer(int cId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Icustomerservice/GetCustomer", ReplyAction="http://tempuri.org/Icustomerservice/GetCustomerResponse")]
        System.Threading.Tasks.Task<client.ServiceReference3.Customer> GetCustomerAsync(int cId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IcustomerserviceChannel : client.ServiceReference3.Icustomerservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IcustomerserviceClient : System.ServiceModel.ClientBase<client.ServiceReference3.Icustomerservice>, client.ServiceReference3.Icustomerservice {
        
        public IcustomerserviceClient() {
        }
        
        public IcustomerserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IcustomerserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IcustomerserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IcustomerserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCustomerIds() {
            return base.Channel.GetCustomerIds();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerIdsAsync() {
            return base.Channel.GetCustomerIdsAsync();
        }
        
        public void AddCustomer(client.ServiceReference3.Customer customer) {
            base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task AddCustomerAsync(client.ServiceReference3.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public client.ServiceReference3.Customer GetCustomer(int cId) {
            return base.Channel.GetCustomer(cId);
        }
        
        public System.Threading.Tasks.Task<client.ServiceReference3.Customer> GetCustomerAsync(int cId) {
            return base.Channel.GetCustomerAsync(cId);
        }
    }
}
